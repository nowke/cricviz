{"version":3,"sources":["components/Slider.js","components/LineChart.js","components/Histogram.js","components/Boxplot.js","components/Selector.js","styles.js","App.js","serviceWorker.js","index.js"],"names":["Label","styled","span","_templateObject","props","left","value","min","width","max","concat","Input","input","_templateObject2","Slider","_ref","year","onChange","inputRef","react_default","a","createElement","style","type","ref","LineChart","data","react_plotly_default","x","Object","toConsumableArray","slice","reverse","y","fill","fillcolor","line","color","showlegend","name","mode","hoverinfo","marker","layout","margin","t","autosize","sliders","visible","xaxis","showgrid","fixedrange","zeroline","yaxis","range","Math","apply","shapes","x0","y0","x1","y1","dash","height","config","displayModeBar","responsive","Histogram","team","within","outside","avg","autobinx","opacity","xbins","end","size","start","bargap","barmode","legend","orientation","b","Boxplot","data_combined","boxmean","Selector","react_select_esm","label","options","styles","control","provided","objectSpread","borderColor","background","&:hover","indicatorsContainer","singleValue","theme","borderRadius","colors","primary25","primary","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","Container","div","styles_templateObject","Header","header","styles_templateObject2","Title","_templateObject3","MetaContainer","_templateObject4","DetailContainer","_templateObject5","StatsContainer","_templateObject6","SelectContainer","_templateObject7","SelectWrapper","_templateObject8","teams","map","i","App","_useState","useState","_useState2","slicedToArray","setYear","_useState3","_useState4","setWidth","_useState5","_useState6","setTeam","_input","React","createRef","histo","histo_data","std","toFixed","className","components_Selector","components_Histogram","components_Boxplot","components_Slider","e","target","current","clientWidth","components_LineChart","avg_data","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1fda635.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.span`\n  position: relative;\n  display: block;\n  background: transparent;\n  width: 120px;\n  height: 30px;\n  border-radius: 10px;\n  border: 2px solid #2d3436;\n  margin-left: 20px;\n  margin-right: 20px;\n  color: #2d3436;\n  font-size: 1.5em;\n  transform-origin: center center;\n  left: ${props => {\n    const left =\n      ((props.value - props.min) * (props.width - 145)) /\n      (props.max - props.min);\n    return `${left}px`;\n  }};\n\n  &::before {\n    content: \"\";\n    width: 0px;\n    height: 0px;\n    border: 0.4em solid transparent;\n    position: absolute;\n    left: 41%;\n    bottom: -20px;\n    border-top: 10px solid #2d3436;\n  }\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 20px);\n  margin: 30px 10px;\n  -webkit-appearance: none;\n\n  &::before {\n    content: \"1971\";\n    width: 40px;\n    display: inline-block;\n    margin: 0 10px;\n    font-size: 20px;\n    color: #2d3436;\n  }\n\n  &::after {\n    content: \"2019\";\n    width: 40px;\n    display: inline-block;\n    margin: 0 10px;\n    font-size: 20px;\n    color: #2d3436;\n  }\n\n  &::-webkit-slider-runnable-track {\n    cursor: pointer;\n    width: 100%;\n    height: 2px;\n    box-shadow: none;\n    background: #2d3436;\n    border-radius: 0px;\n  }\n  &::-moz-range-track {\n    cursor: pointer;\n    width: 100%;\n    height: 2px;\n    box-shadow: none;\n    background: #2d3436;\n    border-radius: 0px;\n  }\n\n  &::-webkit-slider-thumb {\n    box-shadow: none;\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.25);\n    height: 24px;\n    width: 36px;\n    margin-top: -12px;\n    border-radius: 24px;\n    background: rgba(0, 0, 0, 1);\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n  &::-moz-range-thumb {\n    box-shadow: none;\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.25);\n    height: 24px;\n    width: 36px;\n    border-radius: 24px;\n    background: rgba(0, 0, 0, 1);\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -12px;\n  }\n\n  &:focus {\n    outline: none;\n  }\n  &::-moz-focus-outer {\n    border: 0;\n  }\n`;\n\nfunction Slider({ year, width, onChange, inputRef }) {\n  return (\n    <div>\n      <Label min={1971} max={2019} value={year} width={width}>\n        {year}\n      </Label>\n      <div style={{ width: \"100%\" }}>\n        <Input\n          type=\"range\"\n          ref={inputRef}\n          value={year}\n          min={1971}\n          max={2019}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction LineChart({ year, data }) {\n  return (\n    <Plot\n      data={[\n        {\n          x: [...data.x, ...data.x.slice().reverse()],\n          y: [\n            ...data['z-1'],\n            ...data['z+1'].slice().reverse(),\n          ],\n          type: \"scatter\",\n          fill: \"tonexty\",\n          fillcolor: \"rgba(0,176,246,0.2)\",\n          line: { color: \"transparent\" },\n          showlegend: false,\n          name: \"Error\"\n        },\n        {\n          x: data.x,\n          y: data.y,\n          type: \"scatter\",\n          mode: \"lines\",\n          hoverinfo: \"skip\",\n          marker: { color: \"#2d3436\" },\n          showlegend: false,\n          name: \"line\"\n        }\n      ]}\n      layout={{\n        margin: {\n          t: 10\n        },\n        autosize: true,\n        sliders: {\n          visible: false\n        },\n        xaxis: { showgrid: true, fixedrange: true, zeroline: false },\n        yaxis: {\n          showgrid: true,\n          fixedrange: true,\n          zeroline: false,\n          range: [Math.min(...data['z-1']) - 20, Math.max(...data['z+1']) + 20]\n        },\n        shapes: [\n          {\n            type: \"line\",\n            x0: year,\n            y0: 0,\n            x1: year,\n            y1: Math.max(...data['z+1']) + 20,\n            line: {\n              color: \"#d63031\",\n              width: 3,\n              dash: \"dot\"\n            }\n          }\n        ]\n      }}\n      style={{\n        height: 300,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction Histogram({ data, team }) {\n  const within = data.data[0];\n  const outside = data.data[1];\n  const { avg } = data;\n  return (\n    <Plot\n      data={[\n        {\n          x: outside,\n          name: \"outside std.dev\",\n          type: \"histogram\",\n          autobinx: false,\n          opacity: 0.4,\n          marker: {\n            color: \"#00b894\"\n          },\n          xbins: {\n            end: 460,\n            size: 10,\n            start: 100\n          }\n        },\n        {\n          x: within,\n          name: \"within std.dev\",\n          type: \"histogram\",\n          autobinx: false,\n          opacity: 1,\n          marker: {\n            color: \"#00b894\"\n          },\n          xbins: {\n            end: 460,\n            size: 10,\n            start: 100\n          }\n        }\n      ]}\n      layout={{\n        bargap: 0.02,\n        barmode: \"overlay\",\n        autosize: true,\n        showlegend: true,\n        legend: {\n          orientation: \"h\"\n        },\n        margin: {\n          t: 10,\n          b: 30\n        },\n        sliders: {\n          visible: false\n        },\n        xaxis: { showgrid: false, fixedrange: true, range: [100, 400] },\n        yaxis: { showgrid: false, fixedrange: true },\n        shapes: [\n          {\n            type: \"line\",\n            x0: avg,\n            y0: 0,\n            x1: avg,\n            y1: team === '*' ? 16 : 6,\n            line: {\n              color: \"#d63031\",\n              width: 3,\n              dash: \"dot\"\n            }\n          }\n        ]\n      }}\n      style={{\n        height: 250,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default Histogram;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction Boxplot({ data }) {\n  const data_combined = [...data.data[0], ...data.data[1]];\n  return (\n    <Plot\n      data={[\n        {\n          x: data_combined,\n          type: \"box\",\n          boxmean: true,\n          name: \"\",\n          hoverinfo: \"skip\",\n          marker: { color: \"#d63031\" },\n          line: {\n            color: \"#d63031\"\n          },\n          fillcolor: \"rgba(250, 177, 160, 0.5)\"\n        }\n      ]}\n      layout={{\n        bargap: 0.02,\n        autosize: true,\n        margin: {\n          t: 0,\n          b: 0\n        },\n        sliders: {\n          visible: false\n        },\n        xaxis: {\n          visible: false,\n          showgrid: false,\n          fixedrange: true,\n          range: [100, 400]\n        },\n        yaxis: { showgrid: false, fixedrange: true }\n      }}\n      style={{\n        height: 100,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default Boxplot;\n","import React from \"react\";\nimport Select from \"react-select\";\n\nfunction Selector({ value, onChange, data }) {\n  return (\n    <Select\n      value={value}\n      label=\"Select team\"\n      options={data}\n      onChange={onChange}\n      styles={{\n        control: provided => ({\n          ...provided,\n          borderColor: \"#fff\",\n          background: \"#2d3436\",\n          \"&:hover\": {\n            borderColor: \"#fff\"\n          }\n        }),\n        indicatorsContainer: provided => ({\n          ...provided,\n          color: \"fff\",\n          \"&:hover\": {\n            color: \"#fff\"\n          }\n        }),\n        singleValue: provided => ({\n          ...provided,\n          color: \"#fff\"\n        })\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          primary25: \"#c7e4ec\",\n          primary: \"#2d3436\",\n          neutral20: \"#fff\",\n          neutral30: \"#fff\",\n          neutral40: \"#fff\",\n          neutral50: \"#fff\",\n          neutral60: \"#fff\",\n          neutral70: \"#fff\",\n          neutral80: \"#fff\",\n          neutral90: \"#fff\"\n        }\n      })}\n    />\n  );\n}\n\nexport default Selector;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0 auto 10px auto;\n  border: 1px solid #2d3436;\n  max-width: 1000px;\n  width: 90%;\n  padding: 10px;\n`;\n\nexport const Header = styled.header`\n  margin: 0 auto 10px auto;\n  width: 100%;\n  padding: 10px;\n  background: #00b894;\n  color: #fff;\n`;\n\nexport const Title = styled.span`\n  display: block;\n  font-weight: bold;\n  font-size: 1.2em;\n  margin-bottom: 8px;\n  text-transform: capitalize;\n`;\n\nexport const MetaContainer = styled.div`\n  width: 90%;\n  max-width: 1000px;\n  margin: 0 auto;\n  background: #2d3436;\n  color: #fff;\n  padding: 10px;\n  border: 1px solid #2d3436;\n`;\n\nexport const DetailContainer = styled.div`\n  display: block;\n  align-items: center;\n\n  @media only screen and (min-width: 992px) {\n    display: flex;\n  }\n`;\n\nexport const StatsContainer = styled.div`\n  flex: 3;\n`;\n\nexport const SelectContainer = styled.div`\n  flex: 1;\n  color: unset;\n`;\n\nexport const SelectWrapper = styled.div`\n  width: 200px;\n  color: #000;\n  text-align: left;\n  margin: 8px auto;\n\n  @media only screen and (min-width: 992px) {\n    margin: unset;\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Slider from \"./components/Slider\";\nimport LineChart from \"./components/LineChart\";\nimport Histogram from \"./components/Histogram\";\nimport Boxplot from \"./components/Boxplot\";\nimport Selector from \"./components/Selector\";\nimport avg_data from \"./matches_avg.json\";\nimport histo_data from \"./matches_histo.json\";\nimport teams from \"./teams.json\";\nimport {\n  Container,\n  Header,\n  Title,\n  MetaContainer,\n  DetailContainer,\n  StatsContainer,\n  SelectContainer,\n  SelectWrapper\n} from \"./styles\";\n\nconst data = [\n  { label: \"Teams (All)\", value: \"*\" },\n  ...teams.map(i => ({ label: i, value: i }))\n];\n\nfunction App() {\n  const [year, setYear] = useState(1971);\n  const [width, setWidth] = useState(0);\n  const [team, setTeam] = useState(data[0]);\n  const onChange = e => {\n    setYear(e.target.value);\n    setWidth(_input.current.clientWidth);\n  };\n  const _input = React.createRef();\n  const histo = histo_data[year][team.value] || {\n    data: [[0], [0]],\n    avg: 0,\n    std: 0,\n    min: 0,\n    max: 0,\n    range: 0\n  };\n  const avg = histo.avg.toFixed(2);\n  const std = histo.std.toFixed(2);\n  const { max, min, range } = histo;\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <Title>\n          Cricket ODI Matches - First innings scores distribution by year\n        </Title>\n      </Header>\n      <MetaContainer>\n        <DetailContainer>\n          <StatsContainer>\n            <strong>&nbsp;&nbsp;&nbsp;Mean:</strong> {avg},\n            <strong>&nbsp;&nbsp;&nbsp;Std. dev:</strong> {std},\n            <strong>&nbsp;&nbsp;&nbsp;Max:</strong> {max},\n            <strong>&nbsp;&nbsp;&nbsp;Min:</strong> {min}\n            <strong>&nbsp;&nbsp;&nbsp;Range:</strong> {range}\n          </StatsContainer>\n          <SelectContainer>\n            <SelectWrapper>\n              <Selector value={team} data={data} onChange={t => setTeam(t)} />\n            </SelectWrapper>\n          </SelectContainer>\n        </DetailContainer>\n      </MetaContainer>\n      <Container>\n        <Histogram data={histo} team={team.value} />\n        <Boxplot data={histo} />\n        <Slider\n          year={year}\n          width={width}\n          onChange={onChange}\n          inputRef={_input}\n        />\n        <LineChart year={year} data={avg_data[team.value]} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}