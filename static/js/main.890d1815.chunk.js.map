{"version":3,"sources":["components/Slider.js","components/LineChart.js","components/Histogram.js","components/Boxplot.js","App.js","serviceWorker.js","index.js"],"names":["Label","styled","span","_templateObject","props","console","log","width","left","value","min","max","concat","Input","input","_templateObject2","Slider","_ref","onChange","inputRef","react_default","a","createElement","style","type","ref","LineChart","data","react_plotly_default","x","y","mode","hoverinfo","marker","color","layout","margin","t","autosize","sliders","visible","xaxis","showgrid","fixedrange","yaxis","range","shapes","x0","y0","x1","y1","line","dash","height","config","displayModeBar","responsive","Histogram","data_to_render","year","within","outside","avg","name","autobinx","opacity","xbins","end","size","start","bargap","barmode","showlegend","legend","orientation","b","Boxplot","data_combined","Object","toConsumableArray","boxmean","fillcolor","Container","div","App_templateObject","Header","header","App_templateObject2","Title","_templateObject3","App","_useState","useState","_useState2","slicedToArray","setValue","_useState3","_useState4","setWidth","_input","React","createRef","histo_data","toFixed","std","_histo_data$value","className","components_Histogram","components_Boxplot","components_Slider","e","target","current","clientWidth","components_LineChart","avg_data","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.890d1815.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.span`\n  position: relative;\n  display: block;\n  background: transparent;\n  width: 120px;\n  height: 30px;\n  border-radius: 10px;\n  border: 2px solid #2d3436;\n  margin-left: 20px;\n  margin-right: 20px;\n  color: #2d3436;\n  font-size: 1.5em;\n  transform-origin: center center;\n  left: ${props => {\n    console.log(props.width);\n    const left =\n      ((props.value - props.min) * (props.width - 145)) /\n      (props.max - props.min);\n    return `${left}px`;\n  }};\n\n  &::before {\n    content: \"\";\n    width: 0px;\n    height: 0px;\n    border: 0.4em solid transparent;\n    position: absolute;\n    left: 41%;\n    bottom: -20px;\n    border-top: 10px solid #2d3436;\n  }\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 20px);\n  margin: 30px 10px;\n  -webkit-appearance: none;\n\n  &::before {\n    content: \"1971\";\n    width: 40px;\n    display: inline-block;\n    margin: 0 10px;\n    font-size: 20px;\n    color: #2d3436;\n  }\n\n  &::after {\n    content: \"2019\";\n    width: 40px;\n    display: inline-block;\n    margin: 0 10px;\n    font-size: 20px;\n    color: #2d3436;\n  }\n\n  &::-webkit-slider-runnable-track {\n    cursor: pointer;\n    width: 100%;\n    height: 2px;\n    box-shadow: none;\n    background: #2d3436;\n    border-radius: 0px;\n  }\n  &::-moz-range-track {\n    cursor: pointer;\n    width: 100%;\n    height: 2px;\n    box-shadow: none;\n    background: #2d3436;\n    border-radius: 0px;\n  }\n\n  &::-webkit-slider-thumb {\n    box-shadow: none;\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.25);\n    height: 24px;\n    width: 36px;\n    margin-top: -12px;\n    border-radius: 24px;\n    background: rgba(0, 0, 0, 1);\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n  &::-moz-range-thumb {\n    box-shadow: none;\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.25);\n    height: 24px;\n    width: 36px;\n    border-radius: 24px;\n    background: rgba(0, 0, 0, 1);\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -12px;\n  }\n\n  &:focus {\n    outline: none;\n  }\n  &::-moz-focus-outer {\n    border: 0;\n  }\n`;\n\nfunction Slider({ value, width, onChange, inputRef }) {\n  return (\n    <div>\n      <Label min={1971} max={2019} value={value} width={width}>\n        {value}\n      </Label>\n      <div style={{ width: \"100%\" }}>\n        <Input\n          type=\"range\"\n          ref={inputRef}\n          value={value}\n          min={1971}\n          max={2019}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction LineChart({ value, data }) {\n  return (\n    <Plot\n      data={[\n        {\n          x: data.x,\n          y: data.y,\n          type: \"scatter\",\n          mode: \"lines\",\n          hoverinfo: \"skip\",\n          marker: { color: \"#2d3436\" }\n        }\n      ]}\n      layout={{\n        margin: {\n          t: 0\n        },\n        autosize: true,\n        sliders: {\n          visible: false\n        },\n        xaxis: { showgrid: true, fixedrange: true },\n        yaxis: { showgrid: true, fixedrange: true, range: [160, 280] },\n        shapes: [\n          {\n            type: \"line\",\n            x0: value,\n            y0: 0,\n            x1: value,\n            y1: 300,\n            line: {\n              color: \"#d63031\",\n              width: 3,\n              dash: \"dot\"\n            }\n          }\n        ]\n      }}\n      style={{\n        height: 200,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction Histogram({ data, year }) {\n  const data_to_render = data[year];\n  const within = data_to_render.data[0];\n  const outside = data_to_render.data[1];\n  const { avg } = data_to_render;\n  return (\n    <Plot\n      data={[\n        {\n          x: outside,\n          name: \"outside std.dev\",\n          type: \"histogram\",\n          autobinx: false,\n          opacity: 0.4,\n          marker: {\n            color: \"#00b894\"\n          },\n          xbins: {\n            end: 460,\n            size: 10,\n            start: 100\n          }\n        },\n        {\n          x: within,\n          name: \"within std.dev\",\n          type: \"histogram\",\n          autobinx: false,\n          opacity: 1,\n          marker: {\n            color: \"#00b894\"\n          },\n          xbins: {\n            end: 460,\n            size: 10,\n            start: 100\n          }\n        }\n      ]}\n      layout={{\n        bargap: 0.02,\n        barmode: \"overlay\",\n        autosize: true,\n        showlegend: true,\n        legend: {\n          orientation: 'h'\n        },\n        margin: {\n          t: 10,\n          b: 30\n        },\n        sliders: {\n          visible: false\n        },\n        xaxis: { showgrid: false, fixedrange: true, range: [100, 400] },\n        yaxis: { showgrid: false, fixedrange: true },\n        shapes: [\n          {\n            type: \"line\",\n            x0: avg,\n            y0: 0,\n            x1: avg,\n            y1: 15,\n            line: {\n              color: \"#d63031\",\n              width: 3,\n              dash: \"dot\"\n            }\n          }\n        ]\n      }}\n      style={{\n        height: 250,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default Histogram;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nfunction Boxplot({ data, year }) {\n  const data_to_render = data[year];\n  const data_combined = [...data_to_render.data[0], ...data_to_render.data[1]];\n  return (\n    <Plot\n      data={[\n        {\n          x: data_combined,\n          type: \"box\",\n          boxmean: true,\n          name: \"\",\n          hoverinfo: \"skip\",\n          marker: { color: \"#d63031\" },\n          line: {\n            color: \"#d63031\"\n          },\n          fillcolor: \"rgba(250, 177, 160, 0.5)\"\n        }\n      ]}\n      layout={{\n        bargap: 0.02,\n        autosize: true,\n        margin: {\n          t: 0,\n          b: 0\n        },\n        sliders: {\n          visible: false\n        },\n        xaxis: {\n          visible: false,\n          showgrid: false,\n          fixedrange: true,\n          range: [100, 400]\n        },\n        yaxis: { showgrid: false, fixedrange: true }\n      }}\n      style={{\n        height: 100,\n        width: \"100%\"\n      }}\n      config={{\n        displayModeBar: false,\n        responsive: true\n      }}\n    />\n  );\n}\n\nexport default Boxplot;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport Slider from \"./components/Slider\";\nimport LineChart from \"./components/LineChart\";\nimport Histogram from \"./components/Histogram\";\nimport Boxplot from \"./components/Boxplot\";\nimport avg_data from \"./matches_avg.json\";\nimport histo_data from \"./matches_histo.json\";\n\nconst Container = styled.div`\n  margin: 0 auto 10px auto;\n  border: 1px solid #2d3436;\n  max-width: 1000px;\n  width: 90%;\n  padding: 10px;\n`;\n\nconst Header = styled.header`\n  margin: 5px auto 0 auto;\n  border: 1px solid #2d3436;\n  max-width: 1000px;\n  width: 90%;\n  padding: 10px;\n  background: #2d3436;\n  color: #fff;\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-weight: bold;\n  font-size: 1.2em;\n  margin-bottom: 8px;\n`;\n\nfunction App() {\n  const [value, setValue] = useState(1971);\n  const [width, setWidth] = useState(0);\n  const onChange = e => {\n    setValue(e.target.value);\n    setWidth(_input.current.clientWidth);\n  };\n  const _input = React.createRef();\n  const avg = histo_data[value].avg.toFixed(2);\n  const std = histo_data[value].std.toFixed(2);\n  const { max, min, range } = histo_data[value];\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <Title>\n          Cricket ODI Matches - First innings scores distribution by year\n        </Title>\n        <strong>&nbsp;&nbsp;&nbsp;Mean:</strong> {avg},\n        <strong>&nbsp;&nbsp;&nbsp;Std. dev:</strong> {std}\n        <strong>&nbsp;&nbsp;&nbsp;Max:</strong> {max},\n        <strong>&nbsp;&nbsp;&nbsp;Min:</strong> {min}\n        <strong>&nbsp;&nbsp;&nbsp;Range:</strong> {range}\n      </Header>\n      <Container>\n        <Histogram data={histo_data} year={value} />\n        <Boxplot data={histo_data} year={value} />\n        <Slider\n          value={value}\n          width={width}\n          onChange={onChange}\n          inputRef={_input}\n        />\n        <LineChart value={value} data={avg_data} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}